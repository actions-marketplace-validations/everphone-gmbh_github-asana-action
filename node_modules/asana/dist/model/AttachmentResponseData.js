"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _AttachmentResponseDataParent = _interopRequireDefault(require("./AttachmentResponseDataParent"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/**
 * The AttachmentResponseData model module.
 * @module model/AttachmentResponseData
 * @version 0.0.1
 */
var AttachmentResponseData = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>AttachmentResponseData</code>.
   * An *attachment* object represents any file attached to a task in Asana, whether itâ€™s an uploaded file or one associated via a third-party service such as Dropbox or Google Drive.
   * @alias module:model/AttachmentResponseData
   */
  function AttachmentResponseData() {
    _classCallCheck(this, AttachmentResponseData);
    AttachmentResponseData.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(AttachmentResponseData, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>AttachmentResponseData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttachmentResponseData} obj Optional instance to populate.
     * @return {module:model/AttachmentResponseData} The populated <code>AttachmentResponseData</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new AttachmentResponseData();
        if (data.hasOwnProperty('gid')) {
          obj['gid'] = _ApiClient["default"].convertToType(data['gid'], 'String');
        }
        if (data.hasOwnProperty('resource_type')) {
          obj['resource_type'] = _ApiClient["default"].convertToType(data['resource_type'], 'String');
        }
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }
        if (data.hasOwnProperty('resource_subtype')) {
          obj['resource_subtype'] = _ApiClient["default"].convertToType(data['resource_subtype'], 'String');
        }
        if (data.hasOwnProperty('created_at')) {
          obj['created_at'] = _ApiClient["default"].convertToType(data['created_at'], 'Date');
        }
        if (data.hasOwnProperty('download_url')) {
          obj['download_url'] = _ApiClient["default"].convertToType(data['download_url'], 'String');
        }
        if (data.hasOwnProperty('permanent_url')) {
          obj['permanent_url'] = _ApiClient["default"].convertToType(data['permanent_url'], 'String');
        }
        if (data.hasOwnProperty('host')) {
          obj['host'] = _ApiClient["default"].convertToType(data['host'], 'String');
        }
        if (data.hasOwnProperty('parent')) {
          obj['parent'] = _AttachmentResponseDataParent["default"].constructFromObject(data['parent']);
        }
        if (data.hasOwnProperty('size')) {
          obj['size'] = _ApiClient["default"].convertToType(data['size'], 'Number');
        }
        if (data.hasOwnProperty('view_url')) {
          obj['view_url'] = _ApiClient["default"].convertToType(data['view_url'], 'String');
        }
      }
      return obj;
    }
  }]);
  return AttachmentResponseData;
}();
/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
AttachmentResponseData.prototype['gid'] = undefined;

/**
 * The base type of this resource.
 * @member {String} resource_type
 */
AttachmentResponseData.prototype['resource_type'] = undefined;

/**
 * The name of the file.
 * @member {String} name
 */
AttachmentResponseData.prototype['name'] = undefined;

/**
 * The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive`, `onedrive`, `box`, `vimeo`, and `external`.
 * @member {String} resource_subtype
 */
AttachmentResponseData.prototype['resource_subtype'] = undefined;

/**
 * The time at which this resource was created.
 * @member {Date} created_at
 */
AttachmentResponseData.prototype['created_at'] = undefined;

/**
 * The URL containing the content of the attachment. *Note:* May be null if the attachment is hosted by [Box](https://www.box.com/) and will be null if the attachment is a Video Message hosted by [Vimeo](https://vimeo.com/). If present, this URL may only be valid for two minutes from the time of retrieval. You should avoid persisting this URL somewhere and just refresh it on demand to ensure you do not keep stale URLs.
 * @member {String} download_url
 */
AttachmentResponseData.prototype['download_url'] = undefined;

/**
 * 
 * @member {String} permanent_url
 */
AttachmentResponseData.prototype['permanent_url'] = undefined;

/**
 * The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive`, `box`, and `vimeo`.
 * @member {String} host
 */
AttachmentResponseData.prototype['host'] = undefined;

/**
 * @member {module:model/AttachmentResponseDataParent} parent
 */
AttachmentResponseData.prototype['parent'] = undefined;

/**
 * The size of the attachment in bytes. Only present when the `resource_subtype` is `asana`.
 * @member {Number} size
 */
AttachmentResponseData.prototype['size'] = undefined;

/**
 * The URL where the attachment can be viewed, which may be friendlier to users in a browser than just directing them to a raw file. May be null if no view URL exists for the service.
 * @member {String} view_url
 */
AttachmentResponseData.prototype['view_url'] = undefined;
var _default = AttachmentResponseData;
exports["default"] = _default;